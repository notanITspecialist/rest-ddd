// Code generated by MockGen. DO NOT EDIT.
// Source: internal/endpoints/user.go

// Package mock_endpoints is a generated GoMock package.
package mock_endpoints

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserEndpoints is a mock of UserEndpoints interface.
type MockUserEndpoints struct {
	ctrl     *gomock.Controller
	recorder *MockUserEndpointsMockRecorder
}

// MockUserEndpointsMockRecorder is the mock recorder for MockUserEndpoints.
type MockUserEndpointsMockRecorder struct {
	mock *MockUserEndpoints
}

// NewMockUserEndpoints creates a new mock instance.
func NewMockUserEndpoints(ctrl *gomock.Controller) *MockUserEndpoints {
	mock := &MockUserEndpoints{ctrl: ctrl}
	mock.recorder = &MockUserEndpointsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserEndpoints) EXPECT() *MockUserEndpointsMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockUserEndpoints) CreateUser(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateUser", arg0, arg1)
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUserEndpointsMockRecorder) CreateUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserEndpoints)(nil).CreateUser), arg0, arg1)
}

// GetUsers mocks base method.
func (m *MockUserEndpoints) GetUsers(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetUsers", arg0, arg1)
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockUserEndpointsMockRecorder) GetUsers(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockUserEndpoints)(nil).GetUsers), arg0, arg1)
}
